#!/usr/bin/env python3
"""
Teste de autentica√ß√£o Windows com PostgreSQL
"""
import psycopg
from psycopg.rows import dict_row
import os

def test_windows_auth():
    """Testa autentica√ß√£o Windows"""
    print("üîç Testando autentica√ß√£o Windows com PostgreSQL...")
    
    # Obter usu√°rio atual do Windows
    current_user = os.getenv('USERNAME', os.getenv('USER', 'unknown'))
    print(f"üë§ Usu√°rio Windows atual: {current_user}")
    
    # Teste 1: Conex√£o sem especificar usu√°rio (usa usu√°rio Windows)
    print("\n1Ô∏è‚É£ Tentando conex√£o sem especificar usu√°rio...")
    try:
        conn = psycopg.connect(
            host='localhost',
            port=5432,
            dbname='postgres',
            row_factory=dict_row,
            connect_timeout=5
        )
        print("‚úÖ Conex√£o sem usu√°rio - SUCESSO!")
        
        cur = conn.cursor()
        cur.execute("SELECT current_user, current_database();")
        result = cur.fetchone()
        print(f"   üë§ Usu√°rio conectado: {result['current_user']}")
        print(f"   üóÑÔ∏è Banco: {result['current_database']}")
        
        cur.close()
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Falhou: {str(e)[:100]}...")
    
    # Teste 2: Conex√£o com usu√°rio Windows
    print(f"\n2Ô∏è‚É£ Tentando conex√£o com usu√°rio Windows: {current_user}")
    try:
        conn = psycopg.connect(
            host='localhost',
            port=5432,
            dbname='postgres',
            user=current_user,
            row_factory=dict_row,
            connect_timeout=5
        )
        print("‚úÖ Conex√£o com usu√°rio Windows - SUCESSO!")
        
        cur = conn.cursor()
        cur.execute("SELECT current_user, current_database();")
        result = cur.fetchone()
        print(f"   üë§ Usu√°rio conectado: {result['current_user']}")
        print(f"   üóÑÔ∏è Banco: {result['current_database']}")
        
        cur.close()
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Falhou: {str(e)[:100]}...")
    
    # Teste 3: Conex√£o com usu√°rio postgres e senha vazia (trust auth)
    print("\n3Ô∏è‚É£ Tentando conex√£o com usu√°rio postgres e senha vazia...")
    try:
        conn = psycopg.connect(
            host='localhost',
            port=5432,
            dbname='postgres',
            user='postgres',
            password='',
            row_factory=dict_row,
            connect_timeout=5
        )
        print("‚úÖ Conex√£o postgres sem senha - SUCESSO!")
        
        cur = conn.cursor()
        cur.execute("SELECT current_user, current_database();")
        result = cur.fetchone()
        print(f"   üë§ Usu√°rio conectado: {result['current_user']}")
        print(f"   üóÑÔ∏è Banco: {result['current_database']}")
        
        cur.close()
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Falhou: {str(e)[:100]}...")
    
    print("\n‚ùå Nenhuma autentica√ß√£o funcionou!")
    return False

if __name__ == '__main__':
    test_windows_auth()

